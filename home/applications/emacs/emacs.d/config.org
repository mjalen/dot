#+title: Emacs Config
#+author: Jalen Moore

My personal emacs configuration.

* Theme
** Base16 Themes

Theme needs to be loaded before I add nano-faces.

#+begin_src emacs-lisp
   (use-package base16-theme
       :demand t
       :config
       (load-theme 'base16-oxocarbon-dark t))

 ; opacity 
 (set-frame-parameter nil 'alpha-background 95)
 (add-to-list 'default-frame-alist '(alpha-background . 95))
#+end_src

** TODO Modeline

- [ ] Edit modeline to have the info I want (git branch, mode, line:col, maybe a language icon?)

#+begin_src emacs-lisp
   (use-package mini-modeline
     :config (mini-modeline-mode t))
#+end_src

** Fonts

#+begin_src emacs-lisp
  (set-face-attribute 'default nil :family "Victor Mono" :height 120)
  (set-face-attribute 'variable-pitch-text nil :family "Victor Mono" :height 120 :slant 'italic :weight 'normal)
 #+end_src

* Misc
** Functions

#+begin_src emacs-lisp
(defun mjalen/remove_line_numbers ()
  (interactive)
  (display-line-numbers-mode 0))
#+end_src

** UI Clutter

Get rid of it, we don't need it!

#+begin_src emacs-lisp
  (setq inhibit-startup-screen t)
  (menu-bar-mode 0)
  (tool-bar-mode 0)
  (scroll-bar-mode 0)
  (setq display-line-numbers-mode 1)
#+end_src

** Garbage Collection

#+begin_src emacs-lisp
(setq create-lockfiles nil)
(setq delete-by-moving-to-trash t)
#+end_src

** Lines

#+begin_src emacs-lisp
(global-display-line-numbers-mode)
(setq column-number-mode t)
(setq auto-fill-mode t)
(global-visual-line-mode t)
(global-hl-line-mode t)
(blink-cursor-mode t)
(setq global-visual-fill-column-mode nil)
(set-display-table-slot standard-display-table 'wrap ?\ )
#+end_src

** Margins

asdf

* EVIL Mode 

#+begin_src emacs-lisp
  (use-package evil
    :init
    (setq evil-want-integration t)
    ;; (setq evil-want-keybinding 'nil)
    (setq evil-want-C-u-scroll t)
    ;; (setq evil-want-C-i-jump 'nil)
    :config
    (evil-mode 1))
#+end_src

* General.el

#+begin_src emacs-lisp
(use-package general
   :config
   (general-evil-setup nil))
#+end_src

* Helm
** Configuration

#+begin_src emacs-lisp
  (use-package helm
       :straight t
       :config
       (helm-autoresize-mode t))
#+end_src

** Keybindings

#+begin_src emacs-lisp
  (general-define-key
      "M-<tab>" 'other-window
      "M-s" 'switch-to-buffer-other-window
      "C-<tab>" 'counsel-ibuffer
      "<escape>" 'keyboard-escape-quit
      "M-M" 'global-visual-fill-column-mode 
      "M-x" 'helm-M-x
      "C-<tab>" 'helm-buffers-list
      "C-s" 'helm-occur
      "C-x C-f" 'helm-find-files
      "C-x C-c" 'delete-frame)

  (general-def helm-map
      "C-z" 'helm-execute-persistent-action)
#+end_src

* Tools
** Org

# #+begin_src emacs-lisp
# (use-package org
#     :config 
#     (add-hook 'org-mode-hook 'mjalen/remove_line_numbers)
#     (setq org-ellipsis " ▾"))

# (use-package org-superstar
# 	    :after org
# 	    :hook (org-mode . org-superstar-mode)
# 	    :custom
# 	    (org-superstar-remove-leading-stars t)
# 	    (org-superstar-headline-bullets-list '("◉" "○" "●" "○" "●" "○" "●")))

# (use-package markdown-mode)
# #+end_src

** LaTeX

# #+begin_src emacs-lisp
# (setq TeX-auto-save t
#       Tex-parse-self t)

# (setq-default TeX-master nil)

# (use-package flyspell)

# ; convenience for adding hooks to both tex/latex modes.
# (defun mjalen/hook-latex (hook)
#     (let ((hook-list (quote (tex-mode-hook latex-mode-hook))))
#     (mapcar '(lambda (h) (add-hook 'h 'hook)) hook-list)))

# (mjalen/hook-latex 'tex-fold-mode-hook)
# (mjalen/hook-latex 'flyspell-mode-hook)
# (mjalen/hook-latex 'lsp-mode-hook)

# (add-hook 'TeX-mode-hook 'turn-on-reftex)
# (use-package latex-pretty-symbols)
# #+end_src

** Nix

#+begin_src emacs-lisp
   (use-package nix-mode
     :mode "\\.nix\\'")
#+end_src

